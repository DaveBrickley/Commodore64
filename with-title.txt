0 vc = 49152 : s = 54272 : m = 32768 + 2048 : bz = 32000
4 goto 1000
5 rem ::::: blank the screen
6 poke 53265,peek (53265) and 239
7 return
8 rem ::::: load basic
9 poke 53265,peek (53265) or 16 : print chr$(147) : return
10 rem ::::: turn on multi color graphics
11 poke 53270,peek(53270)or 16 : return
12 rem ::::: turn off multi color graphics
13 poke 53270,peek(53270)and 239 : return
14 rem :::: set background colors
15 poke 53281,c0 : poke 53282,c1 : poke 53283,c2 : poke 53284,c3 : return
16 rem ::::: set extended color mode on
17 poke 53265,peek(53265)or 64 : return
18 rem ::::: turn extended color mode off
19 poke 53265,peek(53265) and 191 : return
20 rem :::: set start position
22 print chr$(147) chr$(18) spc(15) "set x,y and audio timing"
24 input "pixels and music timing "; q%,r%,b%,k%
26 return
28 print chr$(147) : return
30 goto 34
32 t0=ti: for t=t0+t*60 to t: t=ti: t=t-5184e3*(t<t0): next: return
34 t=int(rnd(0)*5): gosub 32: return
40 rem ::: change to bank 3
41 poke 56578,peek(56578)or 3
42 poke 56576,(peek(56576)and 252)or 0
43 poke 53272,(peek(53272)and240)or 12
44 return
46 rem ::: toad town environment
47 poke 53272,(peek(53272)and15)or 16
48 poke 648, 196
49 return
50 rem ::: title screen
51 poke 53272,(peek(53272)and15)or 48
52 poke 648, 204
53 return
114 rem ::: colour environment screen
115 c0 = 8 : c1 = 5 : c2 = 1 : c3 = 6 : gosub 15
116 for ar = 0 to 999
117 poke 55296+ar,peek(vc+ar) : next
118 return

119 rem :::: color title screen
120 c0 = 0 : c1 = 0 : c2 = 0 : c3 = 0 : gosub 15
121 for ar = 0 to 999
122 if peek(vc+3072+ar) = 32 then pp = 0
123 if peek(vc+3072+ar) <> 32 then pp = 2
124 poke 55296+ar, pp : next
125 return

130 rem ::: clone useful characters for extended color mode
132 print chr$(142) : rem switch to upper case
134 rem poke 52,48 : poke 56,48 : clr
136 poke 56334,peek(56334)and254
138 poke 1, peek(1) and 251
140 for i = 0 to 511 : poke vc+i+12288,peek(i+512+53248):next
142 poke(1),peek(1)or 4
144 poke56334,peek(56334)or1
145 gosub 550
146 return
180 rem:::: turn on sprite sp
181 poke 53269,peek(53269) or 2^sps
182 return
190 rem :::::turn off sprite sp
191 poke 53269,peek(53269)and(255-2^sp)
192 return
200 rem:::::: x expand sprite sp
201 poke 53277,peek(53277) or 2^sp
202 return
210 rem::::: x unexpand sprite sp
211 poke 53277,peek(53277)and(255-2^sp)
212 return
220 rem ::::: y expand sprite sp
221 poke 53271,peek(53271) or 2^sp
222 return
230 rem ::::::: y unexpand sprite sp
231 poke 53271,peek(53271)and(255-2^sp)
232 return
240 rem::::::: sp priority over shape
241 poke 53275,peek(53275)and(255-2^sp)
242 return
250 rem:::::::shape priority over sp
251 poke 53275,peek(53275)or 2^sp
252 return
260 rem::::::: set sp to color c
261 poke 53287+sp,c
262 return
270 rem::::: place sp at x,y
271 xx=x+24: yy=y+50: z%=xx/256
272 v=xx-z% * 256: w=53248+sp*2
273 ww=53264
274 pr=abs((peek(ww)and 2^sp)<>0)
275 vv = z% : if vv = 1 then vv = 255
276 if pr<>z% then poke 53269,0
277 poke w,v: poke ww,vv: poke 53269,3
278 poke 53249+sp*2,yy
279 return
280 rem:::::::::::::load sprites
282 vc = 49152
284 print "Trying to load sprites ..."
286 if peek(m) = 2 then return
288 read q$
290 if q$ = "sprites" then print "found" q$ : gosub 300 : return
292 goto 288
294 return
295 rem :::: load environment
296 read q$
297 if q$ = "toad-town" then print "found" q$ : gosub 512 : return
298 goto 296
299 return
300 rem :::::::::::: read sprites
302 read nd, nl : print "sprites " nd,nl
304 for i = 0 to nd * nl - 1 : read w: poke vc + 2048 + i, w
306 next i
308 return
310 rem :::: load logo
311 print "looking for logo data "
312 read q$
314 if q$ = "logo" then print "found " q$ : gosub 320 : return
316 goto 312
318 return
320 vc = 49152
322 read nd,nl
323 for i = 0 to nl: read a
324 if a = 32 then goto 326
325 if a > 64 then a = a-64
326 poke vc+3072+i,a
327 next
328 return
330 rem :::::: position sprite
332 if it = 1 then sp = 0 : gosub 270
334 nx = peek(53248) : ny = peek(53249)
336 poke 53250,nx : poke 53251,ny + 20
342 return
350 rem :::::::: flip character
352 if fp = 0 then fp = 4 : gosub 380 : return
354 if fp = 4 then fp = 0 : gosub 380 : return

360 rem :::::::::::initialise toad
362 rem get the x and y coordinates
364 fp = 0 : gosub 380
366 x = q% : y = r%
368 it = 1 : gosub 330
370 return

380 rem ::::::::: set pose
382 sp = 0 : poke vc+2040+sp,0+32+fp
384 sp = 1 : poke vc+2040+sp,3+32+fp
396 return
400 rem ::: calculate destination
404 dx=x2-x1 : dy=y2-y1
406 l=abs(dx): if abs(dy)>l then l=abs(dy)
408 if l>0 then xi=dx/l: yi=dy/l
410 x=x1: y=y1: sd = sd+abs(sd=0)
418 return
420 if wd > 0 then goto 428 : rem set moving pose
422 if tt = 2 then poke vc+2040+sp,0+32+fp : poke vc+2041,3+32+fp
424 if tt = 0 then poke vc+2040+sp,0+32+fp : poke vc+2041,1+32+fp
426 if tt = 1 then poke vc+2040+sp,0+32+fp : poke vc+2041,2+32+fp
428 return

430 rem :: check collision
431 if ac = 3 then goto 440
434 if (peek(53279) and 2) = 2 then ac = 2
436 if (peek(53279) and 1) = 1 then ac = 2
437 if x < 72 and y > 95 then sp = 2 : gosub 250 : goto 440
438 if x > 228 and y > 95 then sp = 2 : gosub 250 : goto 440
439 poke 53275,0
440 return

442 rem ::: pause toad
443 rem tt = 2 : gosub 420
444 if wd = 0 then tt = 2 : gosub 420 : wd = int(rnd(1)*30)
445 if wd > 0 then wd = wd - 1
446 for t = 0 to k% : next t
448 return

450 rem :::: move the sprite
451 if wd > 0 then goto 442 : gosub 472
452 if mv = 0 and l = 0 then gosub 700 : rem startup
454 if mv = l then gosub 700 : mv = 0 : ac = 0 : gosub 442
455 if ac = 2 then gosub 700 : mv = 0 : rem hit collision
456 if mv < l then x=x+xi*sd: y=y+yi*sd : mv = mv + 1
458 gosub 270 : it = 0 : gosub 330
460 if ac = 2 then return
462 tt = mv - int(mv/8) * 8
464 if tt < 2 then tt = 0 : gosub 420
466 if tt > 3 then tt = 1 : gosub 420
468 gosub 430 : rem ac = 0
470 rem tt = 2 : gosub 420
472 return

500 rem ::: character test
502 print chr$(147) : rem clear screen to text prompt
504 gosub 16 : rem extended color mode
506 c0 = 8 : c1 = 5 : c2 = 1 : c3 = 6 : gosub 15
508 for i = 0 to 255 : poke vc+1024+i,i : poke 55296+i,int(rnd(0)*15) : next
510 return

512 rem :::: load environment
513 vc = 49152
516 read nd,nl : rem print "toad town"  nd,nl
517 print chr$(147) : gosub 16
518 for i = 0 to nl: read a,b
520 if a = 30 and b = 8 then goto 524
521 if a = 96 and b = 0 then a = 30 and b = 5
522 poke vc+1024+i,a
523 poke vc+i,b
524 next
540 return
550 rem :: custom fonts
551 ct = 49152 + 12288 : rem old was
552 for i = ct + 240 to ct + 248
554 poke i,255 :rem 28672
556 next
557 poke ct + 8,24:poke ct + 9,60: poke ct + 10,255
558 poke ct + 11,126: poke ct + 12,60: poke ct + 13,102
559 poke ct + 14,66: poke ct + 15,129 :rem star 1
560 poke ct+152,255:poke ct+153,255: poke ct+154,255
561 poke ct+155,0: poke ct+156,0: poke ct+157,231
562 poke ct+158,231: poke ct+159,231 :rem alternate t 19
563 poke ct+176,231:poke ct+177,231: poke ct+178,231
564 poke ct+179,0: poke ct+180,0: poke ct+181,255
565 poke ct+182,255: poke ct+183,255 :rem inverted t 22
566 poke ct+216,255:poke ct+217,255: poke ct+218,255
567 poke ct+219,255: poke ct+220,204: poke ct+221,204
568 poke ct+222,51: poke ct+223,51 :rem inverted brick 27
569 poke ct+184,15:poke ct+185,15: poke ct+186,15
570 poke ct+187,15: poke ct+188,240: poke ct+189,240
571 poke ct+190,240: poke ct+191,240 :rem inverted half check 23
572 poke ct+136,204: poke ct+137,204: poke ct+138,51
573 poke ct+139,51: poke ct+140,204: poke ct+141,204
574 poke ct+142,51: poke ct+143,51 :rem inverted full check 17
575 poke ct+80,128: poke ct+81,192: poke ct+82,224
576 poke ct+83,240: poke ct+84,248: poke ct+85,252
577 poke ct+86,254: poke ct+87,255 :rem inverted chevron 10
578 poke ct+88,1: poke ct+89,3: poke ct+90,7
579 poke ct+91,15: poke ct+92,31: poke ct+93,63
580 poke ct+94,127: poke ct+95,255 :rem inverted chevron 11
582 poke vc, 0 : rem done flag
630 return
640 vc = 49152 : rem :::: check stuff works
642 if peek(vc + 2048) = 2 then goto 646
644 gosub 280 : rem load sprites
646 sp = 0 : it = 1
648 x = q% : y = r%: gosub 270
650 fp = 4 : gosub 380 : rem set pose
652 gosub 330 : rem position other sprites
680 return
700 rem :::: location tracking
702 rem :::: don't change x1 if there has been a collision
703 if ac = 0 then x2 = int(rnd(0)*300) : if x2 < 10 then 703
704 if ac = 0 then y2 = int(rnd(0)*180) : if x2 < 10 then 704
706 if ac = 2 then x2 = x1 : y2 = y1 : ac = 3
708 x1 = peek(53248) - 24 : y1 = peek(53249) - 50
710 rem gosub 30 : rem wait
712 if x2 < x1+vv then fp = 0 :gosub 380 : goto 716
714 if x2 > x1+vv then fp = 4
716 sp = 0 : sd = 1
718 if pr = 1 then x1 = x1+255
720 gosub 400
730 return
800 rem ::::: load music data
802 read q$: if q$ = "voices" then read nd,nl
804 vi = 0
806 for ms = 0 to nd : read v1 : poke m + ms, v1 : next
808 print "done writing voice 1 " ms
809 return
810 rem :::: set up voices
812 for rs = s to s + 24 : poke rs,0 : next : rem clear sound chip registers
813 poke s + 24, 15 : rem set volume to max
814 return
816 rem : full volume
818 poke s + v,6*16+10 : poke s + (v+1), 2*16+10 : rem att dec sus rel  v
819 poke s + v + 7,6*16+10 : poke s + (v+8), 2*16+10 : rem att dec sus rel  v
820 poke s + v + 14,6*16+10 : poke s + (v+15), 2*16+10 : rem att dec sus rel  v
822 return
830 v = 5 : rem ::::::: control voice one
833 poke s + 4, 17
834 poke s,lf : poke s+1,hf : rem poke low and hi respectively
835 for t = 0 to b% : next t
836 poke s + 4, 16
840 return
842 rem ::::::: control voice two
844 poke s + 11, 17 : rem waveform gate open if note change
846 poke s+7,f2 : poke s+8,h2 : rem poke low and hi respectively
848 for t = 0 to b% : next t
850 poke s + 11, 16 : rem waveform gate close if note change
852 return
854 rem ::::::: control voice three
856 poke s + 18, 17 : rem waveform gate open if note change
858 poke s+14,f3 : poke s+15,h3 : rem poke low and hi respectively
859 for t = 0 to b% : next t
860 poke s + 18, 16 : rem waveform gate close if note change
864 return
870 rem ::: combined voices
872 v = 5 : rem ::::::: control voice one
874 poke s + 4, 17 : poke s + 11, 17 : poke s + 18, 17
876 poke s,lf : poke s+1,hf : poke s+7,f2 : poke s+8,h2
877 poke s+14,f3 : poke s+15,h3
878 for t = 0 to b% : next t
880 poke s + 4, 16 : poke s + 11, 16 : poke s + 18, 16
882 return

880 rem :: handle loop
882 if lp = 1 then goto 886
884 lp = 1 : ss = -3 : vw = 543 : vx = 771 : return
886 ss = -3+ : vw = 543 : vx = 771

919 rem :::: play music
920 v = 5 : gosub 816
921 ss = -3 : vw = 543 : vx = 771
922 l1 = 0 : l2 = 0 : l3 = 0
923 aa = 0 : bb = 0 : cc = 0 : if l1 = 0 and ss = 543 then goto 921
924 if l1 = 0 then ss = ss + 3 : aa = 1
925 if l1 = 0 then hf = peek(m+ss) : lf = peek(m+ss+1)
926 if l1 = 0 then l1 = (peek(m+ss+2))
927 if l1 > 0 then l1 = l1 - 1
928 if l2 = 0 then vw = vw + 3 : bb = 1
929 if l2 = 0 then h2 = peek(m+vw) : f2 = peek(m+vw+1)
930 if l2 = 0 then l2 = peek(m+vw+2)
931 if l2 > 0 then l2 = l2 - 1
932 if l3 = 0 then vx = vx + 3 : cc = 1
933 if l3 = 0 then h3 = peek(m+vx) : f3 = peek(m+vx+1)
934 if l3 = 0 then l3 = peek(m+vx+2)
935 if l3 > 0 then l3 = l3 - 1
936 if aa = 0 and bb = 0 and cc = 0 then for t = 0 to b% : next t
937 if aa = 1 and bb = 1 and cc = 1 then gosub 870 : goto 942
938 if bb = 1 then gosub 842
939 if cc = 1 then gosub 854
940 if aa = 1 then gosub 830
942 gosub 450 : goto 923
944 return

950 rem :: show toad town
952 gosub 28 : gosub 46
954 if peek(vc+1024) <> 30 then gosub 295 : rem load environment
956 gosub 114 : rem color environment
958 poke 53276,3 : poke 53285,10 : poke 53286,6 : poke 53288,1
960 gosub 640 : gosub 380
962 mv = 0 : l = 0 : it = 1
964 poke 53279, 0 : gosub 700
966 poke 53269,3 : gosub 810 : gosub 919 : rem start music
968 goto 962

970 rem ::: show title screen
972 rem gosub 28 : poke 53281,7
974 rem print "loading logo data "
976 gosub 50 : rem switch pointers
980 gosub 119 : return

1000 gosub 28 : rem load data
1002 print "loading characters"
1004 if peek(vc) = 255 then gosub 130 : rem load characters
1006 print "loading music "
1008 if peek(m) = 0 then gosub 800 : rem load music
1010 print "loading sprites "
1012 if peek(vc+2048)<> 2 then gosub 280 : rem load sprites
1013 gosub 310 : print "loading title"
1014 gosub 20 : rem get start position
1016 gosub 970 : rem load title
1018 gosub 40 : rem load vic bank
1020 get a$
1022 if a$ = " " then gosub 950
1024 goto 1020

1105 data "voices",1217,0
1500 data 39,223,4,35,134,4,31,165,4,47,107,4
1502 data 35,134,16,39,223,4,35,134,4,31,165,4
1504 data 47,107,4,31,165,8,21,31,2,23,181,2
1506 data 31,165,2,35,134,2,39,223,4,35,134,4
1508 data 31,165,4,47,107,4,56,99,4,53,57,4
1510 data 47,107,4,42,62,4,47,107,12,35,134,4
1512 data 31,165,8,1,12,2,23,181,2,31,165,2
1514 data 35,134,2,31,165,8,29,223,8,31,165,8
1516 data 35,134,8,19,239,4,17,195,4,15,210,4
1518 data 23,181,4,31,165,12,35,134,4,42,62,6
1520 data 39,223,6,35,134,4,31,165,8,29,223,8
1522 data 31,165,6,47,107,6,71,12,4,63,75,6
1524 data 23,181,6,35,134,4,31,165,6,23,181,6
1526 data 35,134,4,31,165,6,23,181,6,17,195,4
1528 data 19,239,4,17,195,4,15,210,4,23,181,4
1530 data 31,165,4,23,181,4,35,134,8,42,62,6
1532 data 39,223,6,35,134,4,31,165,8,29,223,8
1534 data 31,165,6,47,107,6,71,12,4,63,75,6
1536 data 47,107,6,35,134,4,31,165,12,28,49,2
1538 data 31,165,2,35,134,4,31,165,12,1,12,8
1540 data 29,223,8,23,181,12,21,31,4,19,239,16
1542 data 31,165,16,18,209,8,28,49,8,35,134,8
1544 data 42,62,8,39,223,16,35,134,8,53,57,8
1546 data 53,57,4,47,107,2,53,57,2,44,193,2
1548 data 47,107,2,53,57,2,63,75,2,59,190,4
1550 data 47,107,4,35,134,8,53,57,4,47,107,2
1552 data 53,57,2,44,193,2,47,107,2,53,57,2
1554 data 63,75,2,59,190,12,59,190,2,63,75,2
1556 data 71,12,4,63,75,4,63,75,4,59,190,2
1558 data 63,75,2,71,12,4,63,75,4,47,107,8
1560 data 31,165,8,47,107,8,53,57,6,47,107,2
1562 data 44,193,8,47,107,8,35,134,8,1,12,2
1564 data 31,165,2,35,134,2,42,62,2,47,107,2
1566 data 53,57,2,56,99,2,63,75,2,94,214,8
1568 data 1,12,8,42,62,16,39,223,4,35,134,4
1570 data 31,165,4,47,107,4,31,165,12,35,134,4
1572 data 42,62,6,39,223,6,35,134,4,31,165,8
1574 data 29,223,8,31,165,6,23,181,6,35,134,4
1576 data 31,165,6,47,107,6,35,134,4,31,165,4
1578 data 19,239,4,21,31,4,23,181,4,25,30,4
1580 data 28,49,4,25,30,4,21,31,4,39,223,4
1582 data 35,134,4,31,165,4,47,107,4,63,75,12
1584 data 71,12,4,84,125,6,79,191,6,71,12,4
1586 data 63,75,8,59,190,8,63,75,6,94,214,6
1588 data 142,24,4,126,151,6,94,214,6,71,12,4
1590 data 63,75,16,23,181,16
1592 data 23,181,16,21,31,16,19,239,16,15,210,16
1594 data 23,181,16,39,223,16,31,165,16,1,12,16
1596 data 23,181,8,23,181,8,23,181,8,23,181,8
1598 data 1,12,32,31,165,16,15,210,8,17,195,8
1600 data 1,12,32,23,181,6,1,12,26,1,12,32
1602 data 31,165,16,15,210,8,17,195,8,19,239,6
1604 data 23,181,6,35,134,4,31,165,6,23,181,6
1606 data 17,195,4,23,181,16,26,156,16,1,12,32
1608 data 1,12,32,1,12,32,23,181,16,22,96,8
1610 data 1,12,8,22,96,16,23,181,16,22,96,8
1612 data 18,209,8,19,239,8,1,12,8,47,107,32
1614 data 19,239,8,31,165,8,35,134,16,35,134,8
1616 data 1,12,12,1,12,16,28,49,16,1,12,16
1618 data 19,239,16,31,165,16,13,78,8,17,195,8
1620 data 1,12,32,1,12,16,21,31,8,10,143,8
1622 data 23,181,16,31,165,12,35,134,4,42,62,6
1624 data 39,223,6,35,134,4,31,165,8,29,223,8
1626 data 42,62,6,47,107,6,71,12,4,63,75,6
1628 data 47,107,6,35,134,4,31,165,16,17,195,16
1632 data 15,210,16,14,24,16,13,78,16,10,143,16
1634 data 15,210,16,14,24,16,13,78,32,10,143,8
1636 data 11,218,8,12,143,8,14,24,8,1,12,8
1638 data 7,233,8,7,12,4,11,218,4,15,210,8
1640 data 6,167,4,11,218,4,15,210,8,10,143,8
1642 data 11,218,8,13,78,4,19,239,4,31,165,8
1644 data 11,218,4,19,239,4,31,165,8,10,143,4
1646 data 15,210,6,21,31,6,11,218,4,15,210,6
1648 data 15,210,6,7,233,8,9,247,8,7,12,6
1650 data 15,210,6,19,239,4,13,78,8,11,218,8
1652 data 8,225,8,5,237,8,6,167,4,9,247,4
1654 data 15,210,8,5,237,4,8,225,4,15,210,8
1656 data 4,180,4,7,12,4,9,104,4,11,218,4
1658 data 10,143,8,5,71,8,14,239,4,15,210,4
1660 data 17,195,4,21,31,4,21,31,8,19,239,4
1662 data 17,195,4,15,210,4,14,239,4,15,210,4
1664 data 17,195,4,1,12,4,11,218,8,11,218,2
1666 data 13,78,2,14,24,4,21,31,4,11,218,4
1668 data 11,218,2,13,78,2,14,24,4,21,31,4
1670 data 17,195,2,17,195,4,15,210,2,15,210,6
1672 data 14,239,2,15,210,2,11,218,2,1,12,4
1674 data 13,78,16,17,195,32,15,210,8,14,239,8
1676 data 11,218,8,9,247,8,10,143,32,7,233,4
1678 data 11,218,4,4,251,4,11,218,4,7,119,4
1680 data 11,218,4,17,195,4,11,218,4,7,12,4
1682 data 11,218,4,17,195,4,11,218,4,6,167,4
1684 data 10,143,4,15,210,4,10,143,4,6,61,4
1686 data 9,104,4,12,143,4,15,210,4,17,195,16
1688 data 15,210,16,14,24,16,13,78,16,10,143,8
1690 data 11,218,8,13,78,4,19,239,6,19,239,6
1692 data 11,218,4,19,239,6,19,239,6,10,143,6
1694 data 15,210,6,15,210,4,8,225,8,7,12,8
1696 data 3,244,4,9,247,8,15,210,4,11,48,8
1698 data 10,143,8,1,12,8,14,239,8,13,78,8
1700 data 11,218,8,8,225,4,13,78,4,21,31,8
1702 data 5,237,4,8,225,4,14,239,8,5,71,4
1704 data 10,143,4,12,143,4,15,210,4,14,24,16

2000 data "sprites",64,8
2002 data 2,85,0,9,85,96,41,85,104,41,85,104,169,85,104,170
2004 data 85,170,170,170,170,106,170,169,106,170,165,106,170,165,106,170
2006 data 165,106,170,165,105,86,165,103,117,169,167,117,170,167,117,170
2008 data 37,85,168,37,93,168,39,253,168,9,86,160,1,84,0,129
2010 data 80,0,5,20,0,20,21,215,84,71,215,209,15,215,240,15
2012 data 171,240,15,171,240,15,171,240,14,171,240,30,171,240,86,170
2014 data 160,86,170,128,85,170,128,85,169,64,21,169,80,5,1,84
2016 data 0,1,84,0,1,85,0,0,85,0,0,21,0,0,5,129
2018 data 0,0,0,0,0,0,85,215,85,87,215,213,31,215,244,79
2020 data 171,241,15,171,240,15,171,240,14,170,240,14,170,240,14,170
2022 data 176,14,170,176,15,170,176,15,170,240,3,170,192,5,117,64
2024 data 5,245,64,21,213,64,21,213,64,21,213,64,5,213,64,129
2026 data 0,0,0,0,0,0,0,215,0,3,215,192,15,215,240,31
2028 data 171,244,31,171,244,31,171,244,94,170,244,94,170,245,78,170
2030 data 177,78,170,177,79,170,176,15,170,240,3,170,192,5,117,64
2032 data 21,117,80,21,69,80,21,69,80,21,65,80,5,1,64,129
2034 data 0,85,128,9,85,96,41,85,104,41,85,104,41,85,106,170
2036 data 85,170,170,170,170,106,170,169,90,170,169,90,170,169,90,170
2038 data 169,90,170,169,90,149,105,106,93,217,170,93,218,170,93,218
2040 data 42,85,88,42,117,88,42,127,216,10,149,96,0,21,64,129
2042 data 80,0,5,20,0,20,21,215,84,71,215,209,15,215,240,15
2044 data 234,240,15,234,240,15,234,240,15,234,176,15,234,180,10,170
2046 data 149,2,170,149,2,170,85,1,106,85,5,106,84,21,64,80
2048 data 21,64,0,85,64,0,85,0,0,84,0,0,80,0,0,129
2050 data 0,0,0,0,0,0,85,215,85,87,215,213,31,215,244,79
2052 data 234,241,15,234,240,15,234,240,15,170,176,15,170,176,14,170
2054 data 176,14,170,176,14,170,240,15,170,240,3,170,192,1,93,80
2056 data 1,95,80,1,87,84,1,87,84,1,87,84,1,87,80,129
2058 data 0,0,0,0,0,0,0,215,0,3,215,192,15,215,240,31
2060 data 234,244,31,234,244,31,234,244,31,170,181,95,170,181,78,170
2062 data 177,78,170,177,14,170,241,15,170,240,3,170,192,1,93,80
2064 data 5,93,84,5,81,84,5,81,84,5,65,84,1,64,80,129

2200 data "logo",1,999
2202 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2204 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2206 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2208 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2210 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2212 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2214 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2216 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2218 data 32,32,32,100,100,100,32,32,100,32,32,32,32,32,32,32
2220 data 32,84,99,99,77,32,32,32,32,32,32,32,32,32,32,32
2222 data 32,32,32,32,32,32,32,32,32,32,106,32,32,32,77,89
2224 data 106,32,79,119,119,77,114,69,69,84,89,77,32,116,32,32
2226 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2228 data 32,32,106,32,103,77,106,93,32,84,116,89,77,103,32,79
2230 data 69,116,89,78,78,32,32,32,32,32,32,32,32,32,32,32
2232 data 32,32,32,32,32,32,32,32,32,32,106,32,103,78,106,84
2234 data 32,93,116,89,78,103,32,76,82,116,32,78,32,32,32,32
2236 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2238 data 32,32,106,32,32,32,106,32,82,89,116,32,32,78,32,32
2240 data 72,116,32,77,32,32,32,32,32,32,32,32,32,32,32,32
2242 data 32,32,32,32,32,32,32,32,32,32,106,32,32,82,78,72
2244 data 32,84,116,32,79,93,32,79,69,116,32,32,77,32,32,32
2246 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2248 data 32,32,106,32,72,32,84,66,32,89,116,32,116,93,32,76
2250 data 82,116,72,77,32,77,32,32,32,32,32,32,32,32,32,32
2252 data 32,32,32,32,32,32,32,32,32,32,106,32,72,103,32,84
2254 data 32,32,116,32,116,72,32,32,122,116,72,32,77,78,32,32
2256 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2258 data 32,32,32,99,99,32,69,82,32,32,99,99,32,32,69,69
2260 data 32,69,69,32,32,32,32,32,32,32,32,32,32,32,32,32
2262 data 32,32,32,32,32,89,99,77,47,99,77,32,32,32,89,32
2264 data 84,66,69,119,119,77,32,79,69,116,78,99,99,99,119,77
2266 data 32,32,32,32,32,32,32,32,32,32,32,32,32,89,32,32
2268 data 32,32,32,77,32,32,72,32,93,66,89,77,32,103,89,32
2270 data 32,72,32,32,32,32,32,32,71,32,32,32,32,32,32,32
2272 data 32,32,32,32,32,89,32,32,32,32,32,32,77,32,66,32
2274 data 89,66,89,78,32,103,89,32,32,72,32,32,78,69,77,32
2276 data 71,32,32,32,32,32,32,32,32,32,32,32,32,89,32,32
2278 data 32,32,32,32,32,77,84,82,32,84,32,32,32,78,89,32
2280 data 32,116,32,103,32,32,89,32,71,32,32,32,32,32,32,32
2282 data 32,32,32,32,32,89,32,32,103,77,78,77,32,89,32,84
2284 data 71,66,32,32,32,77,89,32,32,72,32,32,77,32,78,32
2286 data 71,32,32,32,32,32,32,32,32,32,32,32,32,89,32,32
2288 data 103,32,32,32,77,93,89,32,89,66,32,93,77,32,77,32
2290 data 32,72,32,32,32,99,32,32,71,32,32,32,32,32,32,32
2292 data 32,32,32,32,32,89,32,32,103,32,32,32,32,71,71,32
2294 data 32,66,32,93,32,77,47,32,32,116,77,32,32,32,32,78
2296 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,99
2298 data 32,32,32,32,32,69,32,32,32,32,69,32,32,32,32,99
2300 data 99,32,32,69,69,69,69,32,32,32,32,32,32,32,32,32
2302 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2304 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2306 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2308 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2310 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2312 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2314 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2316 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2318 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2320 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2322 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2324 data 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
2326 data 32,32,32,32,32,32,32,32

3000 data "toad-town",1,999
3002 data 30,14,30,14,30,14,30,14,30,14,30,14,30,14,30,14
3004 data 30,14,30,14,30,14,30,14,30,14,30,14,155,14,30,14
3006 data 30,14,30,14,30,14,30,14,30,14,30,14,30,14,30,14
3008 data 30,14,30,14,30,14,30,14,30,14,30,14,30,14,30,14
3010 data 233,14,30,6,30,6,30,6,30,6,30,6,30,6,30,6
3012 data 30,14,30,14,30,14,30,14,30,14,30,14,30,14,30,14
3014 data 30,14,30,14,30,14,30,14,145,14,145,14,145,14,145,14,155,14
3016 data 30,14,30,14,30,14,30,14,30,14,30,14,30,14,30,14
3018 data 30,14,30,14,30,14,30,14,30,14,30,14,233,14,30,6
3020 data 30,6,30,6,30,6,30,6,30,6,30,6,30,6
3022 data 30,14,30,14,30,14,30,14,30,14,30,14,30,14,30,14
3024 data 30,14,30,14,155,14,145,14,184,8,184,8,38,5,184,8,184,8
3026 data 184,8,184,8,184,8,184,8,184,8,184,8,184,8,184,8
3028 data 184,8,184,8,184,8,184,8,184,8,233,14,193,7,30,6
3030 data 193,7,30,6,193,7,30,6,193,7,30,6,193,7
3032 data 36,9,36,9,36,9,36,9,36,9,36,9,36,9,36,9,36,9,36,9
3034 data 36,9,36,9,22,7,38,5,38,2,38,5,224,6,213,7,195,7,195,7,195,7
3036 data 201,7,224,6,30,7,30,7,30,7,30,7,30,7,30,7,30,7,247,7,247
3038 data 7,247,7,247,7,247,7,247,7,247,7,247,7,247,7,247,7
3040 data 36,9,36,9,36,9,36,9,36,9,36,9,36,9,36,9,36,9,38,9
3042 data 19,9,104,9,38,5,38,5,38,5,38,5,38,5,194,7,30,6,30,6
3044 data 30,6,194,7,19,7,22,7,19,7,22,7,19,7,22,7,19,7
3046 data 22,7,27,7,19,6,19,6,207,8,247,8,208,8,19,6,15,7
3048 data 16,7,22,6,22,9,19,9,22,9,19,9,22,9,19,9,22,9,19,9
3050 data 22,9,19,9,38,0,40,0,38,5,38,5,38,5,38,2,38,5,194,7
3052 data 30,6,193,7,30,6,194,7,22,7,19,7,27,7,19,7,22,7
3054 data 19,7,22,7,19,7,19,7,19,6,22,6,229,8,30,6,231,8
3056 data 22,6,12,7,58,7,19,6,19,9,22,9,19,9,22,9,40,9,22,9,19,9
3058 data 22,9,19,9,22,9,22,9,19,9,22,7,38,5,38,5,38,5,19,7,194,7
3060 data 30,6,30,6,30,6,194,7,19,7,22,7,19,7,22,7,19,7,22,7
3062 data 19,7,22,7,27,7,22,6,19,6,236,7,30,6,231,8,19,6,22,6
3064 data 19,6,22,6,22,9,19,9,22,9,19,9,22,9,19,9,22,9,19,9,22,9
3066 data 40,9,22,9,22,9,19,7,22,7,52,0,22,7,40,7,194,7,30,6,30,6
3068 data 30,6,194,7,22,7,19,7,22,7,27,7,22,7,19,7,22,7
3070 data 19,7,22,7,19,6,22,6,229,8,30,6,231,8,22,6,19,6,22,6,19,6
3072 data 19,9,19,9,38,5,40,9,19,9,22,9,19,9,22,9,19,9,22,9,40,7
3074 data 40,7,24,7,24,7,52,0,24,7,24,7,194,7,30,6,30,6,30,6,194,7
3076 data 19,7,22,7,19,7,22,7,19,7,22,7,27,7,22,7,30,2
3078 data 30,2,30,2,30,2,30,2,30,2,30,2,30,2,30,2,30,2
3080 data 30,5,30,5,30,5,30,5,30,5,30,5,30,5,30,5,30,5,30,5,30,5
3082 data 30,5,30,8,30,8,40,0,30,8,30,8,30,8,30,8,30,8,30,8,30,8
3084 data 30,8,30,8,30,8,30,8,30,8,30,8,30,5,30,5,30,5,30,5,30,5
3086 data 88,7,88,4,30,5,30,5,30,5,30,5,30,5,30,5,30,5,30,5,30,5
3088 data 88,7,88,4,30,5,30,5,30,5,169,5,160,0,160,0,30,8,30,8
3090 data 30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,63,9
3092 data 30,8,30,8,30,8,160,0,160,0,159,5,30,5,30,5,30,5,30,5
3094 data 30,5,30,5,88,7,88,4,30,5,30,5,30,5,30,5,30,5,30,5
3096 data 30,5,30,5,30,5,75,1,160,0,139,11,41,11,30,8,30,8,30,8
3098 data 30,8,30,8,30,8,30,8,30,8,36,9,36,9,30,8,30,8,30,8,30,8
3100 data 30,8,30,8,31,11,138,11,160,0,160,0,160,0,160,0,160,0,160,0
3102 data 160,0,159,5,30,5,30,5,160,0,160,0,160,0,160,0,160,0,160,0
3104 data 160,0,160,0,160,0,139,11,41,11,30,8,30,8,30,8,30,8,30,8,30,8
3106 data 30,8,30,8,30,8,13,9,30,8,13,9,30,8,30,8,30,8,30,8,30,8,30,8
3108 data 31,11,138,11,160,0,160,0,160,0,160,0,160,0,160,0,160,0
3110 data 160,0,160,0,30,11,30,11,30,11,30,11,30,11,30,11,30,11,30,11
3112 data 30,11,41,11,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8
3114 data 30,8,5,9,5,9,30,8,30,8,30,8,30,8,30,8,30,8,30,8,31,11,30,11
3116 data 30,11,30,11,30,11,30,11,30,11,30,11,30,11,30,11
3118 data 30,11,30,11,41,11,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8
3120 data 30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8
3122 data 30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8
3124 data 30,8,30,8,31,11,30,11,30,11,30,8,30,8,30,8,30,8,30,8,30,8
3126 data 30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8
3128 data 30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8
3130 data 30,8,30,8,30,8,30,8,30,8,63,9,30,8,30,8,30,8,30,8
3132 data 30,8,30,8,30,8,40,5,38,5,30,8,30,8,23,9,30,8,30,8,30,8,30,8
3134 data 30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8
3136 data 30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8
3138 data 30,8,30,8,30,8,30,8,30,8,30,8,30,8,38,5,38,5,28,5,30,8,30,8
3140 data 30,8,30,8,30,8,30,8,30,8,18,9,18,9,30,8,30,8,30,8,30,8,30,8
3142 data 30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8
3144 data 30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,5,30,5,30,5,30,5
3146 data 118,8,30,5,30,5,30,5,30,5,30,5,30,8,30,8,14,9,30,8,14,9,30,8
3148 data 30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8
3150 data 30,8,30,8,30,5,30,5,30,5,30,5,88,7,88,4,30,5,30,5,30,5,30,5
3152 data 30,5,30,5,30,5,30,5,118,8,30,5,30,5,169,5,160,0,160,0,30,8
3154 data 14,9,30,8,14,9,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8
3156 data 30,8,30,8,30,8,30,8,30,8,30,8,30,8,160,0,160,0,159,5,30,5
3158 data 30,5,30,5,30,5,30,5,30,5,30,5,30,5,30,5,30,5,30,5,28,5,30,5
3160 data 169,5,160,0,139,11,30,11,30,8,5,9,5,9,30,8,30,8,30,8,30,8,30,8
3162 data 30,8,30,8,30,8,30,8,30,8,18,9,18,9,18,9,30,8,30,8,30,8,30,8
3164 data 30,11,138,11,160,0,159,5,30,5,30,5,30,5,30,5,30,5,30,5
3166 data 30,5,88,7,88,4,30,5,30,5,169,5,160,0,139,11,41,11,30,8,30,8
3168 data 30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8
3170 data 13,9,30,8,30,8,13,9,30,8,30,8,30,8,30,8,31,11,138,11,160,0
3172 data 159,5,30,5,30,5,30,5,88,7,88,4,30,5,30,5,30,5,30,5,169,5
3174 data 160,0,139,11,41,11,30,8,30,8,30,8,30,8,23,9,30,8,30,8,30,8
3176 data 30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,13,9,30,8,30,8,13,9
3178 data 30,8,30,8,30,8,30,8,31,11,138,11,160,0,159,5,30,5,30,5,30,5,30,5
3180 data 30,5,30,5,30,5,169,5,160,0,139,11,41,11,30,8,30,8,30,8,30,8,30,8
3182 data 30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8
3184 data 5,9,5,9,5,9,30,8,30,8,30,8,30,8,30,8,31,11,138,11,160,0,159,5
3186 data 30,5,30,5,30,5,30,5,30,5,169,5,160,0,139,11,41,11,30,8,30,8,30,8
3188 data 30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8
3190 data 30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8,30,8
3192 data 30,8,30,8,31,11,138,11,160,0,159,5,30,5,30,5

